{"version":3,"sources":["components/ColorPicker/ColorPicker.module.css","components/Painting/Paiting.module.css","components/PaintingList/PaintingList.module.css","components/Counter/Counter.module.css","components/Dropdown/Dropdown.module.css","components/Alert/Alert.module.css","components/Counter/Controls/Controls.module.css","components/Section.js","components/Painting/default.jpg","components/Painting/Painting.js","components/PaintingList/PaintingList.js","components/ColorPicker/ColorPicker.js","components/Alert/Alert.js","components/Counter/Controls/Controls.js","components/Counter/Counter.js","components/Dropdown/Dropdown.js","components/ToDoList/ToDoList.jsx","components/TodoEditor/TodoEditor.js","components/TodoFiltr/TodoFiltr.js","components/Form/Form.jsx","App.jsx","index.js"],"names":["module","exports","Section","title","children","Painting","imageUrl","defaultImg","authorProfile","authorName","price","quantity","className","s","container","img","src","alt","width","href","type","console","log","paintingList","items","flex","map","item","li","url","author","tag","id","ColorPicker","state","activeOptionIdx","setActiveIdx","index","setState","makeOptionClassName","classNames","option","active","options","this","props","label","color","style","backgroundColor","onClick","Component","Alert","text","role","Controls","onIncrement","onDecrement","controls","Counter","value","initialValue","hendleIncrement","e","ps","hendleDecrement","counter","React","defaultProps","Dropdown","visible","togle","Menu","ToDoList","todos","onDeleteTodo","onTogleCompleted","completed","checked","onChange","TodoEditor","message","hendleChange","currentTarget","hendleSubmit","preventDefault","onSubmit","TodoFiltr","Form","name","expirience","licence","nameInputId","shortid","generate","tagInputId","formReset","hendelLicenceChange","htmlFor","disabled","App","InitialTodos","filter","addTodo","todo","deleteTodo","todoId","changeFiltr","getVisibleTodos","normalasingFiltr","toLowerCase","includes","getComplitedTodos","reduce","acc","togleCompleted","formSubmitData","data","countComplitedTodo","visibleTodo","length","PaintingList","paintings","colorPickerOptions","ReactDOM","render","StrictMode","document","querySelector","elem1","elem2","jsxElement"],"mappings":"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","file":"static/js/main.fb4370f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ColorPicker_container__VuLeJ\",\"title\":\"ColorPicker_title__1RStB\",\"option\":\"ColorPicker_option__dHZJ1\",\"active\":\"ColorPicker_active__2yDP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Paiting_container__16B4t\",\"img\":\"Paiting_img__1vhVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"PaintingList_flex__XQRuW\",\"li\":\"PaintingList_li__3UZg5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__2d6O8\",\"value\":\"Counter_value__2-sRl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dropdown\":\"Dropdown_Dropdown__VxUOr\",\"Menu\":\"Dropdown_Menu__nCaQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__1rkHi\",\"error\":\"Alert_error__3geWi Alert_alert__1rkHi\",\"warning\":\"Alert_warning__2gWI4 Alert_alert__1rkHi\",\"success\":\"Alert_success__2FJwX Alert_alert__1rkHi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__TYVc9\"};","import PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <div>\n      {/* \n      -------рендер по условию-----\n      если ето то рендери ето }\n      { isOnline && 'Онлайн' }\n\n      { если ето то рендери ето, а если нет то другое }\n      { isOnline ? 'Онлайн' : 'Офлайн'\n      -----------------------------*/}\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","// импорт PropTypes https://www.npmjs.com/package/prop-types для проверки типов пропсов\nimport PropTypes from 'prop-types';\n// импорт дефолтной картинки\nimport defaultImg from './default.jpg';\nimport s from './Paiting.module.css';\n\nconsole.log(defaultImg);\n\nexport default function Painting({\n  imageUrl = defaultImg,\n  title,\n  authorProfile,\n  authorName = 'не известно',\n  price,\n  quantity,\n}) {\n  return (\n    <div className={s.container}>\n      <img\n        className={s.img}\n        src={imageUrl ?? defaultImg}\n        alt={title}\n        width=\"480\"\n      />\n      <h2>{title}</h2>\n      <p>\n        Автор: <a href={authorProfile}>{authorName}</a>\n      </p>\n      <p>Цена: {price} кредитов</p>\n      {/* рендер по условию */}\n      <p>Доступность: {quantity < 10 ? 'заканчивается' : 'есть в наличии'}</p>\n      <button type=\"button\">Добавить в корзину</button>\n    </div>\n  );\n}\n\n// Проверка типов пропсов, должно бить прописано для всего. .isRequired - обязательний проп\n\nPainting.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  authorProfile: PropTypes.string.isRequired,\n  authorName: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  quantity: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Painting from '../Painting/Painting';\nimport s from './PaintingList.module.css';\n\nfunction paintingList({ items }) {\n  return (\n    <ul className={s.flex}>\n      {items.map(item => (\n        <li // обязательний пропc (key) для колекций, является уникальним идентифиатором, індекс масива можно использовать только в тех колекциях в которих ничего не удаляется,должен стоять на самом корневом елементе(когда ви что-то возвращаете из \"elem.map\")\n          key={item.id}\n          className={s.li}\n        >\n          <Painting\n            imageUrl={item.url}\n            title={item.title}\n            authorName={item.author.tag}\n            authorProfile={item.author.url}\n            price={item.price}\n            quantity={item.quantity}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconsole.log(paintingList);\n\npaintingList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string })),\n};\n\nexport default paintingList;\n","import { Component } from 'react';\nimport classNames from 'classnames';\nimport s from './ColorPicker.module.css';\n// import PropTypes from 'prop-types';\n\nclass ColorPicker extends Component {\n  state = {\n    activeOptionIdx: 0,\n  };\n\n  setActiveIdx = index => {\n    this.setState({ activeOptionIdx: index });\n  };\n\n  makeOptionClassName = index => {\n    // const optionClasses = [s.option];\n    // console.log([s.option]);\n    // if (this.state.activeOptionIdx === index) {\n    //   optionClasses.push(s.active);\n    // }\n    // return optionClasses.join(' ');\n    // const active = s.active;\n\n    return classNames(s.option, {\n      [`${s.active}`]: this.state.activeOptionIdx === index,\n    });\n  };\n\n  render() {\n    const { options } = this.props;\n    const { activeOptionIdx } = this.state;\n    const { label } = options[activeOptionIdx];\n\n    return (\n      <div className={s.container}>\n        <h2 className={s.title}>ColorPicker</h2>\n        <p>цвет: {label}</p>\n        <div>\n          {options.map(({ color, id }, index) => (\n            <button\n              type=\"button\"\n              className={this.makeOptionClassName(index)}\n              key={id}\n              style={{ backgroundColor: color }}\n              onClick={() => {\n                this.setActiveIdx(index);\n              }}\n            ></button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n\n// ColorPicker.prototype = {\n//   options: PropTypes.object.isRequired,\n// };\n","import s from './Alert.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Alert({ text, type }) {\n  // console.log([type]);\n  return (\n    <p role=\"alert\" className={`${s[type]}`}>\n      {text}\n    </p>\n  );\n}\n\nexport default Alert;\n\nAlert.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['error', 'warning', 'success']),\n};\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport s from './Controls.module.css';\n\n// Називать пропи которие передаются функциям \"onЧто-то\"\nconst Controls = ({ onIncrement, onDecrement }) => (\n  <div className={s.controls}>\n    <button type=\"button\" onClick={onIncrement}>\n      Увеличить на 1\n    </button>\n\n    <button type=\"button\" onClick={onDecrement}>\n      Уменьшить на 1\n    </button>\n  </div>\n);\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Counter.module.css';\nimport Controls from './Controls/Controls';\n\nclass Counter extends React.Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  static propTypes = {\n    initialValue: PropTypes.number,\n  };\n\n  // constructor() {\n  //   // super()- визов конструктора родителя до того как использовать this в нутри конструктора ребенка\n  //   super();\n\n  //   this.state = {\n  //     value: 0,\n  //   };\n  // }\n\n  // при изменении state создается новий обект\n  state = {\n    value: this.props.initialValue,\n  };\n\n  hendleIncrement = e => {\n    console.log('click on increment');\n    // что б использовать event в асинхронном коде его нужно сохранять в переменную\n    console.log(e);\n    // изменение обекта state /this.setState()/\n    this.setState(ps => ({ value: ps.value + 1 }));\n  };\n\n  hendleDecrement = () => {\n    this.setState(ps => ({ value: ps.value - 1 }));\n  };\n\n  // метод класса render() возвращяет разметку и только разметку(рендерит ее)\n  render() {\n    const { value } = this.state;\n    return (\n      <div className={s.counter}>\n        <span className={s.value}>{value}</span>\n\n        <Controls\n          onIncrement={this.hendleIncrement}\n          onDecrement={this.hendleDecrement}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import { Component } from 'react';\nimport s from './Dropdown.module.css';\n\nclass Dropdown extends Component {\n  state = {\n    visible: false,\n  };\n\n  togle = () => {\n    this.setState(ps => ({\n      visible: !ps.visible,\n    }));\n  };\n\n  // show = () => {\n  //   this.setState({\n  //     visible: true,\n  //   });\n  // };\n\n  // hide = () => {\n  //   this.setState({\n  //     visible: false,\n  //   });\n  // };\n\n  render() {\n    const { visible } = this.state;\n\n    return (\n      <div className={s.Dropdown}>\n        <button type=\"button\" className=\"Dropdown__toggle\" onClick={this.togle}>\n          {visible ? 'Скрить' : 'Показать'}\n        </button>\n\n        {/* <button type=\"button\" className=\"Dropdown__toggle\" onClick={this.hide}>\n        Скрить\n      </button> */}\n\n        {/* <div className={s.Menu}>MENU</div> */}\n\n        {visible && <div className={s.Menu}>MENU</div>}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","import React from 'react';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nfunction ToDoList({ todos, onDeleteTodo, onTogleCompleted }) {\n  return (\n    <ul className=\"TodoList\">\n      {todos.map(({ id, text, completed }) => (\n        <li\n          key={id}\n          className={classNames('TodoList__item', {\n            'TodoList__item--completed': completed,\n          })}\n        >\n          <input\n            type=\"checkbox\"\n            className=\"TodoList__checkbox\"\n            checked={completed}\n            onChange={() => onTogleCompleted(id)}\n          />\n          <p className=\"TodoList__text\">{text}</p>\n          <button\n            type=\"button\"\n            className=\"TodoList__btn\"\n            onClick={() => onDeleteTodo(id)}\n          >\n            Удалить\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ToDoList;\n","import React, { Component } from 'react';\nimport './TodoEditor.scss';\n\nclass TodoEditor extends Component {\n  state = {\n    message: '',\n  };\n  hendleChange = e => {\n    this.setState({ message: e.currentTarget.value });\n  };\n\n  hendleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.message);\n    this.setState({ message: '' });\n  };\n\n  render() {\n    return (\n      <form className=\"TodoEditor\" onSubmit={this.hendleSubmit}>\n        <textarea\n          className=\"TodoEditor__textarea\"\n          value={this.state.message}\n          onChange={this.hendleChange}\n        ></textarea>\n        <button type=\"submit\" className=\"TodoEditor__button\">\n          Создать TODO\n        </button>\n      </form>\n    );\n  }\n}\nexport default TodoEditor;\n","import React from 'react';\n\nfunction TodoFiltr({ value, onChange }) {\n  return (\n    <label>\n      Filtr for word\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n}\n\nexport default TodoFiltr;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    tag: '',\n    expirience: null,\n    licence: false,\n  };\n\n  nameInputId = shortid.generate();\n  tagInputId = shortid.generate();\n\n  formReset = () => {\n    this.setState({\n      name: '',\n      tag: '',\n      expirience: 'junior',\n      licence: false,\n    });\n  };\n\n  hendleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  hendelLicenceChange = e => {\n    const { checked } = e.currentTarget;\n    console.log(e.currentTarget.checked);\n    this.setState({\n      licence: checked,\n    });\n  };\n\n  hendleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.formReset();\n  };\n\n  render() {\n    const { name, tag, expirience, licence } = this.state;\n    const {\n      hendleChange,\n      hendleSubmit,\n      hendelLicenceChange,\n      nameInputId,\n      tagInputId,\n    } = this;\n    return (\n      <form onSubmit={hendleSubmit}>\n        <label htmlFor={nameInputId}>\n          Имя\n          <input\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            id={nameInputId}\n            onChange={hendleChange}\n          />\n        </label>\n        <label htmlFor={tagInputId}>\n          Ник\n          <input\n            type=\"text\"\n            value={tag}\n            name=\"tag\"\n            id={tagInputId}\n            onChange={hendleChange}\n          />\n        </label>\n        <p>Your level</p>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"expirience\"\n            value=\"junior\"\n            onChange={hendleChange}\n            checked={expirience === 'junior'}\n          />\n          Junior\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"expirience\"\n            value=\"middl\"\n            onChange={hendleChange}\n            checked={expirience === 'middl'}\n          />\n          Middl\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"expirience\"\n            value=\"senior\"\n            onChange={hendleChange}\n            checked={expirience === 'senior'}\n          />\n          Senior\n        </label>\n        <br />\n        <label>\n          <input\n            type=\"checkbox\"\n            name=\"licence\"\n            checked={licence}\n            onChange={hendelLicenceChange}\n          />\n          Соглашаюсь работать за еду\n        </label>\n        <br />\n        <button type=\"submit\" disabled={!licence}>\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Section from './components/Section';\nimport PaintingList from './components/PaintingList/PaintingList';\nimport ColorPicker from './components/ColorPicker/ColorPicker';\nimport colorPickerOptions from './components/ColorPicker/ColorPickerOptions.json';\nimport Alert from './components/Alert/Alert';\nimport Counter from './components/Counter';\nimport Dropdown from './components/Dropdown';\nimport paintings from './paintings.json';\nimport InitialTodos from './components/ToDoList/TodoList.json';\nimport ToDoList from './components/ToDoList';\nimport TodoEditor from './components/TodoEditor';\nimport TodoFiltr from './components/TodoFiltr';\nimport Form from './components/Form/Form';\n\nclass App extends Component {\n  state = {\n    todos: InitialTodos,\n    filter: '',\n  };\n\n  addTodo = text => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n    // console.log(todo);\n\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n\n  deleteTodo = todoId => {\n    this.setState(ps => ({\n      todos: ps.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  changeFiltr = ({ currentTarget }) => {\n    this.setState({ filter: currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const { filter, todos } = this.state;\n    const normalasingFiltr = filter.toLowerCase();\n\n    return todos.filter(todo =>\n      todo.text.toLowerCase().includes(normalasingFiltr),\n    );\n  };\n\n  getComplitedTodos = () => {\n    const { todos } = this.state;\n    return todos.reduce((acc, todo) => (todo.completed ? acc + 1 : acc), 0);\n  };\n\n  togleCompleted = todoId => {\n    // console.log(todoId);\n    // this.setState(ps => ({\n    //   todos: ps.todos.map(todo => {\n    //     if (todo.id === todoId) {\n    //       console.log('Нашли нужний todo');\n    //       return {\n    //         ...todo,\n    //         completed: !todo.completed,\n    //       };\n    //     }\n    //     return todo;\n    //   }),\n    // }));\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    }));\n  };\n\n  formSubmitData = data => console.log(data);\n\n  render() {\n    const { todos, filter } = this.state;\n    const {\n      addTodo,\n      deleteTodo,\n      formSubmitData,\n      togleCompleted,\n      changeFiltr,\n      getVisibleTodos,\n      getComplitedTodos,\n    } = this;\n\n    const countComplitedTodo = getComplitedTodos();\n    const visibleTodo = getVisibleTodos();\n\n    return (\n      <div>\n        <Section title=\"Форма\">\n          <Form onSubmit={formSubmitData} />\n        </Section>\n\n        <Section title=\"ToDoList\">\n          <div>\n            <p>Total Todo: {todos.length}</p>\n            <p>Complited Todo: {countComplitedTodo}</p>\n          </div>\n\n          <TodoEditor onSubmit={addTodo} />\n\n          <TodoFiltr value={filter} onChange={changeFiltr} />\n\n          <ToDoList\n            todos={visibleTodo}\n            onDeleteTodo={deleteTodo}\n            onTogleCompleted={togleCompleted}\n          />\n        </Section>\n\n        <Section title=\"Карточки продуктов\">\n          <PaintingList items={paintings} />\n        </Section>\n\n        <Section title=\"Состояние компонента\">\n          <Counter initialValue={10} />\n        </Section>\n\n        <Section title=\"Випадающее меню\">\n          <Dropdown />\n        </Section>\n\n        <Section title=\"Color Picker\">\n          <ColorPicker options={colorPickerOptions} />\n        </Section>\n\n        <Alert text=\"success\" type=\"success\" />\n        <Alert text=\"warning\" type=\"warning\" />\n        <Alert text=\"error\" type=\"error\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// import React from 'react'; React импортировать для создания елементов не нужно\n// нужно для строгого режима https://ru.reactjs.org/docs/strict-mode.html\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// імпорт нормалайза стилей\nimport 'modern-normalize/modern-normalize.css';\n\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n\n// ---------------------------------------------------------------\n// const element = React.createElement('div', {\n//   a: 5,\n//   b: 6,\n//   children: 'Привет мир',\n// });\n\n// const elem1 = React.createElement('span', { children: 'Привет' }); - создание елемента с помощю React.createElement\n\n// создание елемента с помощю jsx - xml-подобний синтаксис(у одинарних тегов должен бить закривающий слеш/ )\nconst elem1 = <span>Привет </span>;\n\n// const elem2 = React.createElement('span', { children: 'мир' });\nconst elem2 = <span>мир</span>;\n\nconsole.log(elem1, elem2);\n\nconst jsxElement = (\n  <div>\n    {elem1}\n    {elem2}\n  </div>\n);\nconsole.log(jsxElement);\n\n// рендер разметки в DOM\n// ReactDOM.render(jsxElement, document.querySelector('#root'));\n\n// ---------------------------------------------------------------\n"],"sourceRoot":""}